<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
                           http://www.springframework.org/schema/jdbc
	                       http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

    <!-- Fabrique de connexions à ActiveMQ  -->
    <bean id="mqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

    <!-- Objet permettant de manipuler la file d'attente -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="mqConnectionFactory"/>
        <property name="defaultDestinationName" value="${jms.queue}"/>
    </bean>

    <!-- Objet permettant de manipuler la base de données -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="flsDS"/>
    </bean>

    <!-- Base de données de test -->
    <bean id="flsDS" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/fls-test"/>
        <property name="user" value="postgres"/>
        <property name="password" value="sopra*"/>
        <property name="initialPoolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <property name="idleConnectionTestPeriod" value="600"/>
        <property name="maxStatements" value="300"/>
        <property name="numHelperThreads" value="10"/>
    </bean>

    <!-- Configuration de la fabrique d'EntityManager (objet chargé d'effectuer les opérations en DB) -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="POSTGRESQL"/>
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL82Dialect"/>
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
            </props>
        </property>
        <property name="dataSource" ref="flsDS"/>
        <property name="packagesToScan" value="fr.sg.fls.domain"/>
    </bean>

    <!-- Manager de transaction (commit ou rollback en fonction des exceptions etc ...) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Activation de l'annotation @Transactionnal -->
    <tx:annotation-driven/>

    <!-- Répertoires à scanner par Spring Data JPA pour trouver les repositories -->
    <jpa:repositories base-package="fr.sg.fls.repository"/>

    <!-- Convertisseur Spring d'exception -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

</beans>